name: CI Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    name: Build & Test All Packages
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v4
        with:
          version: 10.18.0
      
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'pnpm'
      
      - name: Install circom
        run: |
          wget -q https://github.com/iden3/circom/releases/download/v2.2.1/circom-linux-amd64
          chmod +x circom-linux-amd64
          sudo mv circom-linux-amd64 /usr/local/bin/circom
      
      - name: Cache Powers of Tau
        uses: actions/cache@v4
        with:
          path: ./circuits/build/powersOfTau28_hez_final_14.ptau
          key: powersoftau-28-14
      
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Build circuits
        working-directory: ./circuits
        run: |
          mkdir -p build
          [ ! -f build/powersOfTau28_hez_final_14.ptau ] && wget -q -O build/powersOfTau28_hez_final_14.ptau https://storage.googleapis.com/zkevm/ptau/powersOfTau28_hez_final_14.ptau || true
          circom src/totp_verifier.circom --r1cs --wasm --sym -o build/
          npx tsx scripts/setup.ts
      
      - name: Verify circuit with proof generation
        working-directory: ./circuits
        run: npx tsx scripts/generate_proof.ts 12345 1729353600
      
      - name: Build and test blockchain
        working-directory: ./blockchain
        run: |
          pnpm compile
          pnpm test
          pnpm generate
      
      - name: Lint and build frontend
        working-directory: ./frontend
        run: |
          pnpm lint
          pnpm build
